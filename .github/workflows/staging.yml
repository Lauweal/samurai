name: staging

on:
  push:
    branches:
      - "staging/*"

jobs:
  app:
    name: app
    runs-on: macos-latest
    if: github.ref == 'refs/heads/staging/app'
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v2

      - name: 🏗  初始化node环境
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm

      - name: 🏗 初始化expo和eas构建环境
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🏗 缓存检查
        uses: actions/cache@v3
        id: cache-packages
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 📦 安装依赖项
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: npm install --force

      - name: 🚀 从腾讯云下载环境变量
        uses: Lauweal/tencent-cos-action@v1.0.5
        with:
          type: 'download'
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          cos_bucket: 'environments-1253579870'
          cos_region: 'ap-nanjing'
          local_path: 'apps/soratani'
          remote_path: 'samurai/app/.env'
          clean: true

      - name: 🚀 进行expo构建发布
        run: npm run publish:app-staging

      - name: 👷 Create preview comment
        uses: expo/expo-github-action/preview-comment@v7
        id: preview
        with:
          project: ./apps/soratani
          comment: false
          channel: default


      - name: 💬 发送版本消息通知
        uses: slackapi/slack-github-action@v1.17.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          channel-id: C03DY3QTBTQ
          slack-message: '【发布-staging】soratani-app: ${{ steps.preview.outputs.projectLink }}'

  server:
    name: server
    runs-on: macos-latest
    if: github.ref == 'refs/heads/staging/server'
    steps:
      - name: 🏗 初始化代码仓
        uses: actions/checkout@v2

      - name: 🏗 初始化node环境
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm

      - name: 🏗 缓存检查
        uses: actions/cache@v3
        id: cache-packages
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 📦 依赖下载
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: npm install --force

      - name: 🚀 项目构建
        run: npm run build:server

      - name: 🚀 从腾讯云下载待上传服务器的环境变量
        uses: Lauweal/tencent-cos-action@v1.0.5
        with:
          type: 'download'
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          cos_bucket: 'environments-1253579870'
          cos_region: 'ap-nanjing'
          local_path: 'dist/apps/server/config'
          remote_path: 'samurai/server/'
          clean: true

      - name: 📂 项目发布到指定服务器
        uses: Lauweal/sftp-deploy-action@v1.0.0
        with:
          host: ${{ secrets.FTP_IP }}
          port: ${{ secrets.FTP_PORT }}
          local: ./dist/apps/server
          remote: /www/wwwroot/samurais-server
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}

      - name: 💬 发送版本消息通知
        uses: slackapi/slack-github-action@v1.17.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          channel-id: C03DY3QTBTQ
          slack-message: '【发布-staging】soratani-server'

  H5:
    name: h5
    runs-on: macos-latest
    if: github.ref == 'refs/heads/staging/h5'
    steps:
      - name: 🏗 初始化代码仓
        uses: actions/checkout@v2

      - name: 🏗 初始化node环境
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm

      - name: 🏗 缓存检查
        uses: actions/cache@v3
        id: cache-packages
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: 📦 依赖下载
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: npm install --force

      - name: 🚀 项目构建
        run: npm run build:h5

      - name: 📂 打包结果压缩
        uses: Lauweal/archiver-action@v1.0.6
        id: build
        with:
          type: zip
          name: h5
          input: dist/apps/h5
          output: packages/h5

      - name: 🚀 压缩包推送腾讯云
        uses: Lauweal/tencent-cos-action@v1.0.6
        id: upload
        with:
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          cos_bucket: 'samu-1253579870'
          cos_region: 'ap-nanjing'
          local_path: ${{ steps.build.outputs.path }}
          remote_path: 'packages/h5/'
          clean: true

      - name: 💬 发送成功通知
        uses: slackapi/slack-github-action@v1.17.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          channel-id: C03DY3QTBTQ
          slack-message: '【发布】h5: ${{ steps.upload.outputs.path }}'
